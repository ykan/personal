///////////////////////////////////////////////////////////
//  BLoader.as
//  Macromedia ActionScript Implementation of the Class BLoader
//  Generated by Enterprise Architect
//  Created on:      30-四月-2011 17:52:17
//  Original author: YuKan
///////////////////////////////////////////////////////////

package org.yukan.loader
{
	import flash.net.URLLoader;
	import flash.net.URLLoaderDataFormat;
	import flash.net.URLRequest;
	import flash.events.Event;
	import flash.events.IOErrorEvent;
	import flash.events.ProgressEvent;
	
	
	import org.yukan.data.LLItem;

	/**
	 * @author YuKan
	 * @version 1.0
	 * @created 30-四月-2011 17:52:17
	 */
	public class BLoader extends AbstractLoader
	{
		public static const type:String = "bin";
		
		private var loader:URLLoader;
		
	    public function BLoader()
	    {
			loader = new URLLoader();
			loader.dataFormat = URLLoaderDataFormat.BINARY;
	    }
	    /**
	     * 
	     * @param resource    url
	     */
	    override public function loadItem(item:LLItem): void
	    {
			super.loadItem(item);
			
			var urlres:URLRequest = new URLRequest(super.item.url);
			
			loader.addEventListener(Event.COMPLETE, complete);
			loader.addEventListener(ProgressEvent.PROGRESS, super.progress);
			loader.addEventListener(IOErrorEvent.IO_ERROR, super.ioerror);
			
			loader.load(urlres);
	    }
		override protected function complete(e:Event):void 
		{
			trace("Item load complete.");
			loader.removeEventListener(Event.COMPLETE, complete);
			loader.removeEventListener(ProgressEvent.PROGRESS, super.progress);
			loader.removeEventListener(IOErrorEvent.IO_ERROR, super.ioerror);
			
			item.data = loader.data;
			
			super.complete(e);
		}

	}//end BLoader

}