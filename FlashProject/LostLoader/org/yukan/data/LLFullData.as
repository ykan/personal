///////////////////////////////////////////////////////////
//  LLIterator.as
//  Macromedia ActionScript Implementation of the Class LLIterator
//  Generated by Enterprise Architect
//  Created on:      30-四月-2011 17:52:18
//  Original author: YuKan
///////////////////////////////////////////////////////////

package org.yukan.data
{
	import org.yukan.data.ILLIterator;
	import org.yukan.gc.IGC;

	/**
	 * @author YuKan
	 * @version 1.0
	 * @created 30-四月-2011 17:52:18
	 */
	public class LLFullData implements ILLIterator, IGC
	{
		private var objVector:Vector.<LLItem> = new Vector.<LLItem>();
		private var storage:Object = new Object();
		private var position:uint = 0;
	
		
		public function LLFullData()
	    {
			
	    }
	    /**
	     * 
	     * @param name
	     * @param type    type
	     */
	    public function add(type:String, name:String, url:String, data:Object = null): void
	    {
			storage[type+name] = objVector.length;
			
			var temp:LLItem = new LLItem(objVector.length,type,name,url,data);
			objVector.push(temp);
	    }

	    public function hasNext(): Boolean
	    {
			if (objVector.length > position) 
				return true;

			return false;
	    }

	    public function next(): LLItem
	    {
			if (position == objVector.length) 
				position = 0;
			
			return objVector[position++];
	    }

	    /**
	     * 
	     * @param name
	     * @param type    type
	     */
	    public function select(name:String, type:String):LLItem
	    {
			//trace(type+name,storage[type+name])
			return objVector[storage[type+name]];
	    }
		
		//IGC
		public function dispose():void 
		{
			
		}
		

	}//end LLIterator

}